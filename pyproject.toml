[tool.poetry]
name = "kan-implementation"
version = "0.5.2"
description = "prompts"
authors = ["Jean KUNZ <jkunz@pictet.com>"]
readme = "README.md"
packages = [{ include = "kan" },]
# we need to define what is included in build, to override .gitignore (used by default by poetry)



[tool.poetry.dependencies]
python = "^3.12"
torch = "^2"
matplotlib = "^3.9.0"
scikit-learn = "^1.5.0"
tqdm = "^4.66.4"
sympy = "^1.12"
pykan = "^0.0.5"


[tool.poetry.group.dev.dependencies]
ipykernel = ">=6"
nbdev = "^2"
black = ">=23"
pytest = "^7"
ipytest = "^0"
ipympl = "^0"
pre-commit = "^3"
jupyter = "^1"
mypy = "^1"
icecream = "^2.1.3"
debugpy = "^1.6"
ruff = "^0"




[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ['tests/unit', "tests/integration"]
python_files = ["*_test.py"]
log_cli = true
log_cli_level = "DEBUG"

[tool.black]
line-length = 120


[tool.ruff]
# Set the maximum line length to 79.
line-length = 120

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501","E402","F841","F401","E302","E305", "E401"]
